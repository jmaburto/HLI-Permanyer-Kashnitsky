# Box figure
Box.figA <- ggplot() +
ggtitle(bquote( atop (paste("A) Life expectancy (",e[o],"), threshold age  (",a^h,")"), "and modal age at death (M)")))+
geom_line(data = SWE.eo, aes(x = Year, y = ex),colour=col.eo,size=2, lty=1)+
geom_line(data = SWE.a.g,aes(x = Year, y = a.h),colour=col.a.g,size=2, lty=1)+
geom_line(data = SWE.m,aes(x = Year, y = mode),colour=col.m,size=2, lty=1)+
scale_x_continuous(expression(" "))+
scale_y_continuous(expression("Years"))+
annotate("text", x = 1900 , y = 58,  label = expression(e[o]), col = col.eo, hjust = 0,size = 5)+
annotate("text", x = 1900 , y = 73 , label = expression(a^h), col = col.a.g, hjust = 0,size = 5)+
annotate("text", x = 1900 , y = 80,  label = "M", col = col.m, hjust = 0,size = 5)+
theme(text = element_text(size = 15))+
theme(plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
,legend.key = element_blank()
,strip.text = element_text(color='black')
,axis.line.x = element_line(color="black", size = .5)
,axis.line.y = element_line(color="black", size = .5),
strip.placement = 'outside',
strip.background =  element_rect(colour="white", fill="white"))
previous_theme <- theme_set(theme_bw())
Box.figA
SWE.eo <- SWE.LT[Age == 0,]
col.eo  <- brewer.pal(9,name = 'Blues')[c(5)]
col.a.g <-'slateblue'
col.m   <- 'magenta'
# Box figure
Box.figA <- ggplot() +
ggtitle(bquote( atop (paste("A) Life expectancy (",e[o],"), threshold age  (",a^h,")"), "and modal age at death (M)")))+
geom_line(data = SWE.eo, aes(x = Year, y = ex),colour=col.eo,size=2, lty=1)+
geom_line(data = SWE.a.g,aes(x = Year, y = a.h),colour=col.a.g,size=2, lty=1)+
geom_line(data = SWE.m,aes(x = Year, y = mode),colour=col.m,size=2, lty=1)+
scale_x_continuous(expression(" "))+
scale_y_continuous(expression("Years"))+
annotate("text", x = 1900 , y = 58,  label = expression(e[o]), col = col.eo, hjust = 0,size = 5)+
annotate("text", x = 1900 , y = 73 , label = expression(a^h), col = col.a.g, hjust = 0,size = 5)+
annotate("text", x = 1900 , y = 80,  label = "M", col = col.m, hjust = 0,size = 5)+
theme(text = element_text(size = 15))+
theme(plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
,legend.key = element_blank()
,strip.text = element_text(color='black')
,axis.line.x = element_line(color="black", size = .5)
,axis.line.y = element_line(color="black", size = .5),
strip.placement = 'outside',
strip.background =  element_rect(colour="white", fill="white"))
previous_theme <- theme_set(theme_bw())
Box.figA
Year <- years <- unique(SWE.LT$Year)
Deaths.below.threshold <- unlist(lapply(years,function(x){
LT  <- SWE.LT[SWE.LT$Year == x, ]
age <- SWE.a.g[SWE.a.g$Year == x,]$a.h
y <- get.contrib.function(contrib = LT$dx,age.x = age)[1]*100
}))
Deaths.below.ex <- unlist(lapply(years,function(x){
LT  <- SWE.LT[SWE.LT$Year == x, ]
age <- SWE.eo[SWE.eo$Year == x,]$ex
y <- get.contrib.function(contrib = LT$dx,age.x = age)[1]*100
}))
Deaths.below.mode <- unlist(lapply(years,function(x){
LT  <- SWE.LT[SWE.LT$Year == x, ]
age <- SWE.m[SWE.m$Year == x,]$mode
y <- get.contrib.function(contrib = LT$dx,age.x = age)[1]*100
}))
Deaths.below <- data.table(cbind(Year,Deaths.below.threshold,Deaths.below.ex,Deaths.below.mode))
Box.figB <- ggplot() +
ggtitle(bquote( atop (paste("B) Proportion of deaths below "),paste(e[o],", ",a^h," and M"))))+
geom_line(data = Deaths.below, aes(x = Year, y = Deaths.below.ex),colour=col.eo,size=2, lty=1)+
geom_line(data = Deaths.below,aes(x = Year, y = Deaths.below.threshold),colour=col.a.g,size=2, lty=1)+
geom_line(data = Deaths.below,aes(x = Year, y = Deaths.below.mode),colour=col.m,size=2, lty=1)+
scale_x_continuous(expression(" "))+
scale_y_continuous(expression("Proportion"))+
annotate("text", x = 1950 , y = 38,  label = expression(paste('% of deaths below ',e[o])), col = col.eo, hjust = 0,size = 5)+
annotate("text", x = 1950 , y = 47 , label = expression(paste('% of deaths below ',a^h)), col = col.a.g, hjust = 0,size = 5)+
annotate("text", x = 1950 , y = 68.5,  label = "% of deaths below M", col = col.m, hjust = 0,size = 5)+
theme(text = element_text(size = 15))+
theme(plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
,legend.key = element_blank()
,strip.text = element_text(color='black')
,axis.line.x = element_line(color="black", size = .5)
,axis.line.y = element_line(color="black", size = .5),
strip.placement = 'outside',
strip.background =  element_rect(colour="white", fill="white"))
previous_theme <- theme_set(theme_bw())
Box.figB
load('Data/Decomp_results.Rdata')
SWE.Decomp <- Results.decomp[PopName == 'SWE' & Sex == 'f' & Age %in% 0:105,]
#### Improvements below threshold age
#x <- 1901
Changes.below.threshold <- lapply(years[-1],function(x){
D1  <- SWE.Decomp[SWE.Decomp$Year == x, ]$h.decomp # for lifespan equality
D2  <- SWE.Decomp[SWE.Decomp$Year == x, ]$eo.decomp       # for life expectancy
age <- SWE.a.g[SWE.a.g$Year == x,]$a.g
early.h <- abs(sum(D1[1:(trunc(age)+1)])+ (age-trunc(age))*D1[ceiling(age)+1])
late.h  <- abs((1-(age-trunc(age)))*D1[ceiling(age)+1] + sum(D1[(trunc(age)+2):106]))
h       <- early.h/(late.h + early.h)*100
early.eo <- abs(sum(D2[1:(trunc(age)+1)])+ (age-trunc(age))*D2[ceiling(age)+1])
late.eo  <- abs((1-(age-trunc(age)))*D2[ceiling(age)+1] + sum(D2[(trunc(age)+2):106]))
eo       <- early.eo/(early.eo + late.eo)*100
cbind(eo1 =eo ,h1 = h)
})
Changes.below.threshold      <- data.table(do.call(rbind,Changes.below.threshold))
Changes.below.threshold.10      <- Changes.below.threshold[,list(h.10 = rollapply(h1,10,mean),
e0.10 = rollapply(eo1,10,mean)),]
Changes.below.threshold.10$Year <- 1900:(dim(Changes.below.threshold.10)[1]+1899)
#### Improvements below life expectancy
#x <- 1901
Changes.below.eo <- lapply(years[-1],function(x){
D1  <- SWE.Decomp[SWE.Decomp$Year == x, ]$h.decomp # for lifespan equality
D2  <- SWE.Decomp[SWE.Decomp$Year == x, ]$eo.decomp       # for life expectancy
age <- SWE.eo[SWE.eo$Year == x,]$ex
early.h <- abs(sum(D1[1:(trunc(age)+1)])+ (age-trunc(age))*D1[ceiling(age)+1])
late.h  <- abs((1-(age-trunc(age)))*D1[ceiling(age)+1] + sum(D1[(trunc(age)+2):106]))
h       <- early.h/(late.h + early.h)*100
early.eo <- abs(sum(D2[1:(trunc(age)+1)])+ (age-trunc(age))*D2[ceiling(age)+1])
late.eo  <- abs((1-(age-trunc(age)))*D2[ceiling(age)+1] + sum(D2[(trunc(age)+2):106]))
eo       <- early.eo/(early.eo + late.eo)*100
cbind(eo1 =eo ,h1 = h)
})
Changes.below.eo      <- data.table(do.call(rbind,Changes.below.eo))
Changes.below.eo.10      <- Changes.below.eo[,list(h.10 = rollapply(h1,10,mean),
e0.10 = rollapply(eo1,10,mean)),]
Changes.below.eo.10$Year <- 1900:(dim(Changes.below.eo.10)[1]+1899)
#### Improvements below the mode
#x <- 1901
Changes.below.m <- lapply(years[-1],function(x){
D1  <- SWE.Decomp[SWE.Decomp$Year == x, ]$h.decomp # for lifespan equality
D2  <- SWE.Decomp[SWE.Decomp$Year == x, ]$eo.decomp       # for life expectancy
age <- SWE.m[SWE.m$Year == x,]$mode
early.h <- abs(sum(D1[1:(trunc(age)+1)])+ (age-trunc(age))*D1[ceiling(age)+1])
late.h  <- abs((1-(age-trunc(age)))*D1[ceiling(age)+1] + sum(D1[(trunc(age)+2):106]))
h       <- early.h/(late.h + early.h)*100
early.eo <- abs(sum(D2[1:(trunc(age)+1)])+ (age-trunc(age))*D2[ceiling(age)+1])
late.eo  <- abs((1-(age-trunc(age)))*D2[ceiling(age)+1] + sum(D2[(trunc(age)+2):106]))
eo       <- early.eo/(early.eo + late.eo)*100
cbind(eo1 =eo ,h1 = h)
})
Changes.below.m      <- data.table(do.call(rbind,Changes.below.m))
Changes.below.m.10      <- Changes.below.m[,list(h.10 = rollapply(h1,10,mean),
e0.10 = rollapply(eo1,10,mean)),]
Changes.below.m.10$Year <- 1900:(dim(Changes.below.m.10)[1]+1899)
#### create figures
y.i <- 93
Box.figC <- ggplot() +
ggtitle(expression(paste("C) Percentage of change in lifespan equality (h)")))+
geom_line(data = Changes.below.eo.10, aes(x = Year, y = h.10),colour=col.eo,size=2, lty=1)+
geom_line(data = Changes.below.threshold.10,aes(x = Year, y = h.10),colour=col.a.g,size=2, lty=1)+
geom_line(data = Changes.below.m.10,aes(x = Year, y = h.10),colour=col.m,size=2, lty=1)+
scale_x_continuous(limits = c(1900,2017),expression("Year"))+
scale_y_continuous(limits = c(30,95), expression("% of change"))+
annotate("text", x = 1950 , y = y.i,  label = 'Lines relate to % of changes in', col = 'black', hjust = 0,size = 5)+
annotate("text", x = 1950 , y = y.i-2.7,  label = expression(paste('h (panel C) and ',e[o],  ' (panel D) due to changes in')), col = 'black', hjust = 0,size = 5)+
annotate("text", x = 1950 , y = y.i-5.2,  label = 'death rates below:', col = 'black', hjust = 0,size = 5)+
annotate("text", x = 1950 , y = y.i-7.7,  label = expression(paste('1. ',e[o])), col = col.eo, hjust = 0,size = 5)+
annotate("text", x = 1950 , y = y.i-10.5 , label = expression(paste('2. ',a^h)), col = col.a.g, hjust = 0,size = 5)+
annotate("text", x = 1950 , y = y.i-13.3,  label = "3. M", col = col.m, hjust = 0,size = 5)+
theme(text = element_text(size = 15))+
theme(plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
,legend.key = element_blank()
,strip.text = element_text(color='black')
,axis.line.x = element_line(color="black", size = .5)
,axis.line.y = element_line(color="black", size = .5),
strip.placement = 'outside',
strip.background =  element_rect(colour="white", fill="white"))
previous_theme <- theme_set(theme_bw())
Box.figC
Box.figD <-ggplot() +
ggtitle(expression(paste("D) Percentage of change in life expectancy (",e[o],")")))+
geom_line(data = Changes.below.eo.10, aes(x = Year, y = e0.10),colour=col.eo,size=2, lty=1)+
geom_line(data = Changes.below.threshold.10,aes(x = Year, y = e0.10),colour=col.a.g,size=2, lty=1)+
geom_line(data = Changes.below.m.10,aes(x = Year, y = e0.10),colour=col.m,size=2, lty=1)+
scale_x_continuous(limits = c(1900,2017),expression("Year"))+
scale_y_continuous(limits = c(30,95),expression("%"))+
# annotate("text", x = 1900 , y = 69,  label = 'Lines relate to % of changes in', col = 'black', hjust = 0,size = 5)+
# annotate("text", x = 1900 , y = 67.5,  label = 'lifespan equality due to changes', col = 'black', hjust = 0,size = 5)+
# annotate("text", x = 1900 , y = 66,  label = 'in death rates below:', col = 'black', hjust = 0,size = 5)+
# annotate("text", x = 1900 , y = 64,  label = expression(paste('1. ',e[o])), col = col.eo, hjust = 0,size = 5)+
# annotate("text", x = 1900 , y = 62 , label = expression(paste('2. ',a^h)), col = col.a.g, hjust = 0,size = 5)+
# annotate("text", x = 1900 , y = 59,  label = "3. M", col = col.m, hjust = 0,size = 5)+
theme(text = element_text(size = 15))+
theme(plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank()
,panel.border = element_blank()
,legend.key = element_blank()
,strip.text = element_text(color='black')
,axis.line.x = element_line(color="black", size = .5)
,axis.line.y = element_line(color="black", size = .5),
strip.placement = 'outside',
strip.background =  element_rect(colour="white", fill="white"))
previous_theme <- theme_set(theme_bw())
Box.figD
lay.FigbOX <- rbind(c(1,2),
c(3,4))
grid.arrange(Box.figA,Box.figB,Box.figC,Box.figD, layout_matrix = lay.FigbOX)
install.packages(c("latticeExtra", "lmtest"))
# Box graph
rm(list=ls(all=TRUE))
library(data.table)
library(reshape)
library(latticeExtra)
library(gridExtra)
library(lmtest)
# Set working directory
setwd("C:/Users/jmaburto.SAM/Documents/GitHub/Dynamics-of-life-expectancy-and-lifespan-equality/Reproduce Results/")
# Loading data
load("Data/HMD_Data.RData")
# Be careful with the missing years of Belgium
Data  <- HMDL[HMDL$Year >= 1900 & HMDL$PopName !="BEL",]
# Get data for belgium in consecutive years
Bel   <- HMDL[HMDL$Year >= 1919 & HMDL$PopName=="BEL",]
Data  <- data.table(rbind(Data,Bel))
Data[, Sex1:= ifelse(Sex == 'f', 'Females', 'Males')]
gdata::keep(Data,sure = T)
Results           <- Data[,list(h=h.frommx(mx = mx,sex = Sex[1]),
v=my.cv.frommx(mx = mx,sex = Sex[1]),
g=log.G.frommx(mx = mx,sex = Sex[1]),
eo = ex[1],
Period = cut(Year,breaks = c(1900,1920,1959,Inf),labels = c("1900-1921","1921-1959","1960 onwards"),include.lowest = T)),
by = list(PopName,Sex,Sex1,Year)]
source('Functions_1.R')
Results           <- Data[,list(h=h.frommx(mx = mx,sex = Sex[1]),
v=my.cv.frommx(mx = mx,sex = Sex[1]),
g=log.G.frommx(mx = mx,sex = Sex[1]),
eo = ex[1],
Period = cut(Year,breaks = c(1900,1920,1959,Inf),labels = c("1900-1921","1921-1959","1960 onwards"),include.lowest = T)),
by = list(PopName,Sex,Sex1,Year)]
Dif.data           <- Results[,list(dif.h = diff(h),
dif.g = diff(g),
dif.v = diff(v),
dif.eo = diff(eo),
dif.year= Y(Year,lag.2 = 1),
Period = cut(Year[-1],breaks = c(1900,1920,1959,Inf),labels = c("1900-1921","1921-1959","1960 onwards"),include.lowest = T)),
by = list(PopName,Sex)]
R.sqr.data  <- Results[, list(R.sqr.h = R.sqr(h,eo),
R.sqr.g = R.sqr(g,eo),
R.sqr.v = R.sqr(v,eo),
DW.h = dw(h,eo),
DW.g = dw(g,eo),
DW.v = dw(v,eo)), by = list(PopName,Sex)]
#Proportion of R^2 larger than DW
Prop     <- R.sqr.data[,3:5] - R.sqr.data[,6:8]
Prop     <- Prop[,ifelse(.SD > 0,1,0),]
colSums(Prop)/dim(Prop)[1]*100
prop.leq <- c(colSums(Prop)/dim(Prop)[1]*100)[1]
# mean and sd
colMeans(R.sqr.data[,3:8])
Fig.A1<- xyplot(R.sqr.h ~ DW.h ,data=R.sqr.data,groups=Sex,
main =expression(paste("Life expectancy (", e[o],") vs lifespan equality (",h,')')),
pch=19,col=c("red","blue"),cex=1.9,
xlim=c(0,2),
ylab=list(quote(R^2),cex=1.6),
ylim=c(0,1.01),
scales=list(x=list(cex=1.5,at=c(seq(0,2,.25))),
y=list(cex=1.5,at=c(seq(0,1,.25)))),
xlab=list("Durbin-Watson statistic",cex=1.6),
par.settings=my.settings1,
key = list(x=.8,y=.2, title="Sex",background="white",
text=list(c("Females","Males"))
,cex=1.5,
points=list(pch=19,col=c("red","blue"))),
panel = function(x, y, ...){
panel.polygon(x=c(0,1,0),y=c(0,1.01,1.01),col=makeTransparent("grey",100))
panel.text(.39,.75,labels=paste(as.character(round(prop.leq,1)),"%"),cex=1.7)
panel.xyplot(x, y, ...)
})
Fig.A1
install.packages(c("urca", "vars"))
rm(list=ls(all=TRUE))
library(data.table)
library(reshape)
library(latticeExtra)
library(lmtest)
library(urca)
library(vars)
setwd("C:/Users/jmaburto.SAM/Documents/GitHub/Dynamics-of-life-expectancy-and-lifespan-equality/Reproduce Results/")
load("Data/HMD_Data.RData")
Data  <- HMDL[HMDL$Year >= 1900 & HMDL$PopName !="BEL",]
# Get data for belgium in consecutive years
Bel   <- HMDL[HMDL$Year >= 1919 & HMDL$PopName=="BEL",]
Data  <- data.table(rbind(Data,Bel))
Data[, Sex1:= ifelse(Sex == 'f', 'Females', 'Males')]
gdata::keep(Data,sure = T)
source('Functions_1.R')
Results           <- Data[,list(h=h.frommx(mx = mx,sex = Sex[1]),
v=my.cv.frommx(mx = mx,sex = Sex[1]),
g=log.G.frommx(mx = mx,sex = Sex[1]),
eo = ex[1],
Period = cut(Year,breaks = c(1900,1920,1959,Inf),labels = c("1900-1921","1921-1959","1960 onwards"),include.lowest = T)),
by = list(PopName,Sex,Sex1,Year)]
#Calculate differences on life expectancy and lifespan equality indicators
Dif.data           <- Results[,list(dif.h = diff(h),
dif.g = diff(g),
dif.v = diff(v),
dif.eo = diff(eo),
dif.year= Y(Year,lag.2 = 1),
Period = cut(Year[-1],breaks = c(1900,1920,1959,Inf),labels = c("1900-1921","1921-1959","1960 onwards"),include.lowest = T)),
by = list(PopName,Sex)]
nms <- unique(Results$PopName)
sex <- unique(Results$Sex)
nms <- unique(Results$PopName)
sex <- unique(Results$Sex)
#i <- nms[1]
#j <- sex[1]
ADF_test  <- NULL
KPSS_test <- NULL
cv_adf    <- NULL
cv_kpss   <- NULL
for (i in nms){
for (j in sex){
d1        <- subset(Results, PopName == i & Sex == j)
d1        <- d1[with(d1, order(Year))]
ini.year  <- range(d1$Year)[1]
last.year <- range(d1$Year)[2]
#for life expectancy
ts1       <- ts(d1$eo,start = ini.year, end = last.year)
#for h
ts2       <- ts(d1$h,start = ini.year, end = last.year)
# for g
ts3       <- ts(d1$g,start = ini.year, end = last.year)
# for v
ts4       <- ts(d1$v,start = ini.year, end = last.year)
#Dickey fuller test
df.test.eo    <- ur.df(ts1,lags=5,type='trend',selectlags = "AIC")
df.test.h     <- ur.df(ts2,lags=5,type='trend',selectlags = "AIC")
df.test.g     <- ur.df(ts3,lags=5,type='trend',selectlags = "AIC")
df.test.v     <- ur.df(ts4,lags=5,type='trend',selectlags = "AIC")
ADF_t     <- c(df.test.eo@teststat[1],df.test.h@teststat[1],df.test.g@teststat[1],df.test.v@teststat[1])
msr       <- c("eo","h","g","v")
Name      <- rep(i,4)
Sex       <- rep(j,4)
a         <- cbind.data.frame(Name,Sex,msr,ADF_t,stringsAsFactors = FALSE)
ADF_test  <- rbind(ADF_test,a)
#Kwiatkowski-Phillips-Schmidt-Shin test
kpss.eo   <- ur.kpss(ts1,type="tau", lags = "nil")
kpss.h    <- ur.kpss(ts2,type="tau", lags = "nil")
kpss.g    <- ur.kpss(ts3,type="tau", lags = "nil")
kpss.v    <- ur.kpss(ts4,type="tau", lags = "nil")
Kpss_t    <- c(kpss.eo@teststat[1],kpss.h@teststat[1],kpss.g@teststat[1],kpss.v@teststat[1])
b         <- cbind.data.frame(Name,Sex,msr,Kpss_t,stringsAsFactors = FALSE)
KPSS_test <- rbind(KPSS_test,b)
#Critical values
cv_adf <- rbind(cv_adf,df.test.eo@cval[1,])
cv_kpss <- rbind(cv_kpss,kpss.eo@cval[1,])
ts1 <- ts2 <- ts3 <- ts4 <- NULL
}
}
critical.values.adf <- df.test.eo@cval
critical.values.kpss<- kpss.eo@cval
unique(ADF_test$msr)
KPSS_test$prop <- KPSS_test$Kpss_t > critical.values.kpss[2]
# Get proportions of non stationary processes
p1 <- subset(KPSS_test, msr=="eo")
p2 <- subset(KPSS_test, msr=="h")
p3 <- subset(KPSS_test, msr=="g")
p4 <- subset(KPSS_test, msr=="v")
prop1 <- table(p1$prop)["TRUE"]/dim(p1)[1]*100
prop2 <- table(p2$prop)["TRUE"]/dim(p2)[1]*100
prop3 <- table(p3$prop)["TRUE"]/dim(p3)[1]*100
prop4 <- table(p4$prop)["TRUE"]/dim(p4)[1]*100
cbind(eo=prop1,h=prop2,g=prop3,v=prop4)
text2 <- c(expression(v),expression(h),expression(e[o]),expression(g))
KPSS.eta  <- densityplot(~ Kpss_t|msr ,data=KPSS_test,
pch=19,col=c("red","blue"),cex=1.9,
strip=strip.custom(factor.levels=text2),
main=list("a) Kwiatkowski-Phillips-Schimidt-Shin test",cex=2),
par.strip.text=list(cex=2),col.line="black",
lwd=3,layout=c(2,2),
ylab=list("Density",cex=1.6),
scales=list(x=list(at=c(seq(-.5,2.5,.25))),
y=list(relation = 'free')),
xlab=list("95% critical value",cex=1.6),
par.settings=my.settings1,
key = list(x=0.001,y=.9, title="Sex",background="transparent",
text=list(c("Females","Males"))
,cex=1.5,
points=list(pch=19,col=c("red","blue"))),
panel = function(x, y, ...){
panel.abline(h=c(0),col='black',lty=1)
panel.text(.8,.28,labels=c(paste(as.character(round(prop4,2)),"% of unit root"),
paste(as.character(round(prop2,2)),"% of unit root"),
paste(as.character(round(prop1,2)),"% of unit root"),
paste(as.character(round(prop3,2)),"% of unit root"))[panel.number()],cex=1)
panel.text(.78,.15,labels="non stationary",cex=1)
panel.rect(xleft=-.25, xright=critical.values.kpss[2],ybottom=-.05, ytop=1.5,col=makeTransparent("blue",30))
panel.densityplot(x,...)
panel.abline(v=c(critical.values.kpss[2]),col='black',lty=1,lwd=2)
})
KPSS.eta
ADF_test2 <- NULL
cv_adf2 <- NULL
for (i in nms){
for (j in sex){
d1       <- subset(Dif.data, PopName == i & Sex == j)
d1        <- d1[order(dif.year),]
ini.year  <- range(d1$dif.year)[1]
last.year <- range(d1$dif.year)[2]
#for life expectancy
ts1       <- ts(d1$dif.eo,start = ini.year, end = last.year)
#for eta
ts2       <- ts(d1$dif.h,start = ini.year, end = last.year)
# for log.G
ts3       <- ts(d1$dif.g,start = ini.year, end = last.year)
# for cv
ts4       <- ts(d1$dif.v,start = ini.year, end = last.year)
#Dickey fuller test
df.test.eo <- ur.df(ts1,type='drift',selectlags = "AIC")
df.test.h  <- ur.df(ts2,type='drift',selectlags = "AIC")
df.test.g  <- ur.df(ts3,type='drift',selectlags = "AIC")
df.test.v  <- ur.df(ts4,type='drift',selectlags = "AIC")
ADF_t     <- c(df.test.eo@teststat[1],df.test.h@teststat[1],df.test.g@teststat[1],df.test.v@teststat[1])
msr       <- c("eo","h","g","v")
Name      <- rep(i,4)
Sex       <- rep(j,4)
a         <- cbind.data.frame(Name,Sex,msr,ADF_t,stringsAsFactors = FALSE)
ADF_test2  <- rbind(ADF_test2,a)
#Critical values
cv_adf2 <- rbind(cv_adf2,df.test.eo@cval[1,])
}
}
critical.values.adf <- df.test.eo@cval
ADF_test2$prop <- ADF_test2$ADF_t < critical.values.adf[1,2]
# Get proportions of non stationary processes
p1 <- subset(ADF_test2, msr=="eo")
p2 <- subset(ADF_test2, msr=="h")
p3 <- subset(ADF_test2, msr=="g")
p4 <- subset(ADF_test2, msr=="v")
prop1.1 <- table(p1$prop)["TRUE"]/dim(p1)[1]*100
prop2.1 <- table(p2$prop)["TRUE"]/dim(p2)[1]*100
prop3.1 <- table(p3$prop)["TRUE"]/dim(p3)[1]*100
prop4.1 <- table(p4$prop)["TRUE"]/dim(p4)[1]*100
cbind(eo=prop1.1,h=prop2.1,g=prop3.1,v=prop4.1)
# Figure of density plot for ADF (Appendix)------------------------------------------
ADF.eta  <- densityplot(~ ADF_t|msr ,data=ADF_test2,
pch=19,col=c("red","blue"),cex=1.9,
strip=strip.custom(factor.levels=text2),
main=list("b) ADF test on first differences",cex=2),
par.strip.text=list(cex=2),col.line="black",
lwd=3,layout=c(2,2),
ylab=list("Density",cex=1.6),
scales=list(y=list(relation = 'free')),
xlab=list("95% critical value",cex=1.6),
par.settings=my.settings1,
key = NULL,
panel = function(x, y, ...){
panel.abline(h=c(0),col='black',lty=1)
panel.text(-7,.1,labels=c(paste(as.character(round(prop4.1,2)),"% I(1)"),
paste(as.character(round(prop2.1,2)),"% I(1)"),
paste(as.character(round(prop1.1,2)),"% I(1)"),
paste(as.character(round(prop3.1,2)),"% I(1)"))[panel.number()],cex=1)
panel.rect(xleft=-.25, xright=critical.values.adf[1,2],ybottom=-.05, ytop=1.5,col=makeTransparent("blue",30))
panel.densityplot(x,...)
panel.abline(v=c(critical.values.adf[1,2]),col='black',lty=1,lwd=2)
})
ADF.eta
install.packages(c("egcm", "FitAR"))
rm(list=ls(all=TRUE))
library(egcm)
library(latticeExtra)
library(urca)
library(reshape)
library(vars)
library(FitAR)
setwd("C:/Users/jmaburto.SAM/Documents/GitHub/Dynamics-of-life-expectancy-and-lifespan-equality/Reproduce Results/")
load("Data/HMD_Data.RData")
HMDL <- HMDL[!(PopName %in% c('KOR', 'HRV', 'CHL','FRACNP')), ]
# Be careful with the missing years of Belgium
Data  <- HMDL[HMDL$Year >= 1900 & HMDL$PopName !="BEL",]
# Get data for belgium in consecutive years
Bel   <- HMDL[HMDL$Year >= 1919 & HMDL$PopName=="BEL",]
Data  <- data.table(rbind(Data,Bel))
Data[, Sex1:= ifelse(Sex == 'f', 'Females', 'Males')]
gdata::keep(Data,sure = T)
source('Functions_1.R')
############## Calculate lifespan equality measures
Results           <- Data[,list(h=h.frommx(mx = mx,sex = Sex[1]),
v=my.cv.frommx(mx = mx,sex = Sex[1]),
g=log.G.frommx(mx = mx,sex = Sex[1]),
eo = ex[1],
Period = cut(Year,breaks = c(1900,1920,1959,Inf),labels = c("1900-1921","1921-1959","1960 onwards"),include.lowest = T)),
by = list(PopName,Sex,Sex1,Year)]
nms       <- unique(Results$PopName)
sex       <- unique(Results$Sex)
measures  <- c('h','g','v')
Coin.data    <- NULL
vecm.data    <- NULL
autocor.data <- NULL
# SPANISH FLU
Results$dumvar1 <- ifelse(Results$Year==1918,1,0)
# WW1
Results$dumvar2 <- ifelse(Results$Year==1914 |Results$Year==1915|Results$Year==1916|Results$Year==1917|Results$Year==1918|Results$Year==1919,1,0)
# SPANISH CIVIL WAR
Results$dumvar3 <- ifelse(Results$Year==1939 |Results$Year==1940|Results$Year==1941|Results$Year==1942|Results$Year==1943|Results$Year==1944|Results$Year==1945,1,0)
# WW2
Results$dumvar4 <- ifelse(Results$Year==1940|Results$Year==1941|Results$Year==1942|Results$Year==1943|Results$Year==1944|Results$Year==1945,1,0)
# BREAK DOWN SOVIET UNION
Results$dumvar5 <- ifelse(Results$Year==1990|Results$Year==1991|Results$Year==1992|Results$Year==1993|Results$Year==1994|Results$Year==1995,1,0)
# WAR IN FINLAND AND SOVIET UNION
Results$dumvar5 <- ifelse(Results$Year==1992|Results$Year==1993|Results$Year==1994|Results$Year==1995,1,0)
# CIVIL WAR FOR SPAIN
Results$dumvar5 <- ifelse(Results$Year==1992|Results$Year==1993|Results$Year==1994|Results$Year==1995,1,0)
install.packages("tsDyn")
