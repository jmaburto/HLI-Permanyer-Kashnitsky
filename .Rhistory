library(reshape)
library(latticeExtra)
library(lmtest)
library(urca)
library(vars)
setwd("C:/Users/jmaburto.SAM/Documents/GitHub/Dynamics-of-life-expectancy-and-lifespan-equality/Reproduce Results/")
load("Data/HMD_Data.RData")
Data  <- HMDL[HMDL$Year >= 1900 & HMDL$PopName !="BEL",]
# Get data for belgium in consecutive years
Bel   <- HMDL[HMDL$Year >= 1919 & HMDL$PopName=="BEL",]
Data  <- data.table(rbind(Data,Bel))
Data[, Sex1:= ifelse(Sex == 'f', 'Females', 'Males')]
gdata::keep(Data,sure = T)
source('Functions_1.R')
Results           <- Data[,list(h=h.frommx(mx = mx,sex = Sex[1]),
v=my.cv.frommx(mx = mx,sex = Sex[1]),
g=log.G.frommx(mx = mx,sex = Sex[1]),
eo = ex[1],
Period = cut(Year,breaks = c(1900,1920,1959,Inf),labels = c("1900-1921","1921-1959","1960 onwards"),include.lowest = T)),
by = list(PopName,Sex,Sex1,Year)]
#Calculate differences on life expectancy and lifespan equality indicators
Dif.data           <- Results[,list(dif.h = diff(h),
dif.g = diff(g),
dif.v = diff(v),
dif.eo = diff(eo),
dif.year= Y(Year,lag.2 = 1),
Period = cut(Year[-1],breaks = c(1900,1920,1959,Inf),labels = c("1900-1921","1921-1959","1960 onwards"),include.lowest = T)),
by = list(PopName,Sex)]
nms <- unique(Results$PopName)
sex <- unique(Results$Sex)
nms <- unique(Results$PopName)
sex <- unique(Results$Sex)
#i <- nms[1]
#j <- sex[1]
ADF_test  <- NULL
KPSS_test <- NULL
cv_adf    <- NULL
cv_kpss   <- NULL
for (i in nms){
for (j in sex){
d1        <- subset(Results, PopName == i & Sex == j)
d1        <- d1[with(d1, order(Year))]
ini.year  <- range(d1$Year)[1]
last.year <- range(d1$Year)[2]
#for life expectancy
ts1       <- ts(d1$eo,start = ini.year, end = last.year)
#for h
ts2       <- ts(d1$h,start = ini.year, end = last.year)
# for g
ts3       <- ts(d1$g,start = ini.year, end = last.year)
# for v
ts4       <- ts(d1$v,start = ini.year, end = last.year)
#Dickey fuller test
df.test.eo    <- ur.df(ts1,lags=5,type='trend',selectlags = "AIC")
df.test.h     <- ur.df(ts2,lags=5,type='trend',selectlags = "AIC")
df.test.g     <- ur.df(ts3,lags=5,type='trend',selectlags = "AIC")
df.test.v     <- ur.df(ts4,lags=5,type='trend',selectlags = "AIC")
ADF_t     <- c(df.test.eo@teststat[1],df.test.h@teststat[1],df.test.g@teststat[1],df.test.v@teststat[1])
msr       <- c("eo","h","g","v")
Name      <- rep(i,4)
Sex       <- rep(j,4)
a         <- cbind.data.frame(Name,Sex,msr,ADF_t,stringsAsFactors = FALSE)
ADF_test  <- rbind(ADF_test,a)
#Kwiatkowski-Phillips-Schmidt-Shin test
kpss.eo   <- ur.kpss(ts1,type="tau", lags = "nil")
kpss.h    <- ur.kpss(ts2,type="tau", lags = "nil")
kpss.g    <- ur.kpss(ts3,type="tau", lags = "nil")
kpss.v    <- ur.kpss(ts4,type="tau", lags = "nil")
Kpss_t    <- c(kpss.eo@teststat[1],kpss.h@teststat[1],kpss.g@teststat[1],kpss.v@teststat[1])
b         <- cbind.data.frame(Name,Sex,msr,Kpss_t,stringsAsFactors = FALSE)
KPSS_test <- rbind(KPSS_test,b)
#Critical values
cv_adf <- rbind(cv_adf,df.test.eo@cval[1,])
cv_kpss <- rbind(cv_kpss,kpss.eo@cval[1,])
ts1 <- ts2 <- ts3 <- ts4 <- NULL
}
}
critical.values.adf <- df.test.eo@cval
critical.values.kpss<- kpss.eo@cval
unique(ADF_test$msr)
KPSS_test$prop <- KPSS_test$Kpss_t > critical.values.kpss[2]
# Get proportions of non stationary processes
p1 <- subset(KPSS_test, msr=="eo")
p2 <- subset(KPSS_test, msr=="h")
p3 <- subset(KPSS_test, msr=="g")
p4 <- subset(KPSS_test, msr=="v")
prop1 <- table(p1$prop)["TRUE"]/dim(p1)[1]*100
prop2 <- table(p2$prop)["TRUE"]/dim(p2)[1]*100
prop3 <- table(p3$prop)["TRUE"]/dim(p3)[1]*100
prop4 <- table(p4$prop)["TRUE"]/dim(p4)[1]*100
cbind(eo=prop1,h=prop2,g=prop3,v=prop4)
text2 <- c(expression(v),expression(h),expression(e[o]),expression(g))
KPSS.eta  <- densityplot(~ Kpss_t|msr ,data=KPSS_test,
pch=19,col=c("red","blue"),cex=1.9,
strip=strip.custom(factor.levels=text2),
main=list("a) Kwiatkowski-Phillips-Schimidt-Shin test",cex=2),
par.strip.text=list(cex=2),col.line="black",
lwd=3,layout=c(2,2),
ylab=list("Density",cex=1.6),
scales=list(x=list(at=c(seq(-.5,2.5,.25))),
y=list(relation = 'free')),
xlab=list("95% critical value",cex=1.6),
par.settings=my.settings1,
key = list(x=0.001,y=.9, title="Sex",background="transparent",
text=list(c("Females","Males"))
,cex=1.5,
points=list(pch=19,col=c("red","blue"))),
panel = function(x, y, ...){
panel.abline(h=c(0),col='black',lty=1)
panel.text(.8,.28,labels=c(paste(as.character(round(prop4,2)),"% of unit root"),
paste(as.character(round(prop2,2)),"% of unit root"),
paste(as.character(round(prop1,2)),"% of unit root"),
paste(as.character(round(prop3,2)),"% of unit root"))[panel.number()],cex=1)
panel.text(.78,.15,labels="non stationary",cex=1)
panel.rect(xleft=-.25, xright=critical.values.kpss[2],ybottom=-.05, ytop=1.5,col=makeTransparent("blue",30))
panel.densityplot(x,...)
panel.abline(v=c(critical.values.kpss[2]),col='black',lty=1,lwd=2)
})
KPSS.eta
ADF_test2 <- NULL
cv_adf2 <- NULL
for (i in nms){
for (j in sex){
d1       <- subset(Dif.data, PopName == i & Sex == j)
d1        <- d1[order(dif.year),]
ini.year  <- range(d1$dif.year)[1]
last.year <- range(d1$dif.year)[2]
#for life expectancy
ts1       <- ts(d1$dif.eo,start = ini.year, end = last.year)
#for eta
ts2       <- ts(d1$dif.h,start = ini.year, end = last.year)
# for log.G
ts3       <- ts(d1$dif.g,start = ini.year, end = last.year)
# for cv
ts4       <- ts(d1$dif.v,start = ini.year, end = last.year)
#Dickey fuller test
df.test.eo <- ur.df(ts1,type='drift',selectlags = "AIC")
df.test.h  <- ur.df(ts2,type='drift',selectlags = "AIC")
df.test.g  <- ur.df(ts3,type='drift',selectlags = "AIC")
df.test.v  <- ur.df(ts4,type='drift',selectlags = "AIC")
ADF_t     <- c(df.test.eo@teststat[1],df.test.h@teststat[1],df.test.g@teststat[1],df.test.v@teststat[1])
msr       <- c("eo","h","g","v")
Name      <- rep(i,4)
Sex       <- rep(j,4)
a         <- cbind.data.frame(Name,Sex,msr,ADF_t,stringsAsFactors = FALSE)
ADF_test2  <- rbind(ADF_test2,a)
#Critical values
cv_adf2 <- rbind(cv_adf2,df.test.eo@cval[1,])
}
}
critical.values.adf <- df.test.eo@cval
ADF_test2$prop <- ADF_test2$ADF_t < critical.values.adf[1,2]
# Get proportions of non stationary processes
p1 <- subset(ADF_test2, msr=="eo")
p2 <- subset(ADF_test2, msr=="h")
p3 <- subset(ADF_test2, msr=="g")
p4 <- subset(ADF_test2, msr=="v")
prop1.1 <- table(p1$prop)["TRUE"]/dim(p1)[1]*100
prop2.1 <- table(p2$prop)["TRUE"]/dim(p2)[1]*100
prop3.1 <- table(p3$prop)["TRUE"]/dim(p3)[1]*100
prop4.1 <- table(p4$prop)["TRUE"]/dim(p4)[1]*100
cbind(eo=prop1.1,h=prop2.1,g=prop3.1,v=prop4.1)
# Figure of density plot for ADF (Appendix)------------------------------------------
ADF.eta  <- densityplot(~ ADF_t|msr ,data=ADF_test2,
pch=19,col=c("red","blue"),cex=1.9,
strip=strip.custom(factor.levels=text2),
main=list("b) ADF test on first differences",cex=2),
par.strip.text=list(cex=2),col.line="black",
lwd=3,layout=c(2,2),
ylab=list("Density",cex=1.6),
scales=list(y=list(relation = 'free')),
xlab=list("95% critical value",cex=1.6),
par.settings=my.settings1,
key = NULL,
panel = function(x, y, ...){
panel.abline(h=c(0),col='black',lty=1)
panel.text(-7,.1,labels=c(paste(as.character(round(prop4.1,2)),"% I(1)"),
paste(as.character(round(prop2.1,2)),"% I(1)"),
paste(as.character(round(prop1.1,2)),"% I(1)"),
paste(as.character(round(prop3.1,2)),"% I(1)"))[panel.number()],cex=1)
panel.rect(xleft=-.25, xright=critical.values.adf[1,2],ybottom=-.05, ytop=1.5,col=makeTransparent("blue",30))
panel.densityplot(x,...)
panel.abline(v=c(critical.values.adf[1,2]),col='black',lty=1,lwd=2)
})
ADF.eta
install.packages(c("egcm", "FitAR"))
rm(list=ls(all=TRUE))
library(egcm)
library(latticeExtra)
library(urca)
library(reshape)
library(vars)
library(FitAR)
setwd("C:/Users/jmaburto.SAM/Documents/GitHub/Dynamics-of-life-expectancy-and-lifespan-equality/Reproduce Results/")
load("Data/HMD_Data.RData")
HMDL <- HMDL[!(PopName %in% c('KOR', 'HRV', 'CHL','FRACNP')), ]
# Be careful with the missing years of Belgium
Data  <- HMDL[HMDL$Year >= 1900 & HMDL$PopName !="BEL",]
# Get data for belgium in consecutive years
Bel   <- HMDL[HMDL$Year >= 1919 & HMDL$PopName=="BEL",]
Data  <- data.table(rbind(Data,Bel))
Data[, Sex1:= ifelse(Sex == 'f', 'Females', 'Males')]
gdata::keep(Data,sure = T)
source('Functions_1.R')
############## Calculate lifespan equality measures
Results           <- Data[,list(h=h.frommx(mx = mx,sex = Sex[1]),
v=my.cv.frommx(mx = mx,sex = Sex[1]),
g=log.G.frommx(mx = mx,sex = Sex[1]),
eo = ex[1],
Period = cut(Year,breaks = c(1900,1920,1959,Inf),labels = c("1900-1921","1921-1959","1960 onwards"),include.lowest = T)),
by = list(PopName,Sex,Sex1,Year)]
nms       <- unique(Results$PopName)
sex       <- unique(Results$Sex)
measures  <- c('h','g','v')
Coin.data    <- NULL
vecm.data    <- NULL
autocor.data <- NULL
# SPANISH FLU
Results$dumvar1 <- ifelse(Results$Year==1918,1,0)
# WW1
Results$dumvar2 <- ifelse(Results$Year==1914 |Results$Year==1915|Results$Year==1916|Results$Year==1917|Results$Year==1918|Results$Year==1919,1,0)
# SPANISH CIVIL WAR
Results$dumvar3 <- ifelse(Results$Year==1939 |Results$Year==1940|Results$Year==1941|Results$Year==1942|Results$Year==1943|Results$Year==1944|Results$Year==1945,1,0)
# WW2
Results$dumvar4 <- ifelse(Results$Year==1940|Results$Year==1941|Results$Year==1942|Results$Year==1943|Results$Year==1944|Results$Year==1945,1,0)
# BREAK DOWN SOVIET UNION
Results$dumvar5 <- ifelse(Results$Year==1990|Results$Year==1991|Results$Year==1992|Results$Year==1993|Results$Year==1994|Results$Year==1995,1,0)
# WAR IN FINLAND AND SOVIET UNION
Results$dumvar5 <- ifelse(Results$Year==1992|Results$Year==1993|Results$Year==1994|Results$Year==1995,1,0)
# CIVIL WAR FOR SPAIN
Results$dumvar5 <- ifelse(Results$Year==1992|Results$Year==1993|Results$Year==1994|Results$Year==1995,1,0)
install.packages("tsDyn")
rm(list=ls(all=TRUE))
library(data.table)
library(ggplot2)
library(viridis)
library(reshape2)
# set your working directory
setwd("C:/Users/jmaburto.SAM/Documents/GitHub/HLI-Permanyer-Kashnitsky/")
#source("1_GetHMDData.R") # Just in case you want updatedM HD Data
# Loading results
#source('R/2_HLI.R')
load('Data/Results_HLI.RData')
HLI_Decomp[,Dif.H := H2-H1]
HLI_Decomp[,Year := year.1]
HLI_Decomp[,Decade := cut(year.1,breaks = c(seq(1750,2010,10),Inf),
#labels = c("1900-1921","1921-1959","1960 onwards"),
include.lowest = T)]
HLI_Decomp.decade <- HLI_Decomp[,list(Delta.mu.decade = sum(Delta.mu),
Delta.I.decade = sum(Delta.I),
Dif.h.decade = sum(Dif.H),
H.bar = mean(H1),
Inequality.bar = mean(I1),
Mu.bar = mean(mu1),
year.1 =  min(year.1)
), by = list(PopName,Sex,Decade,epsilon)]
HLI_Decomp.decade[,C.mu.decade := Delta.mu.decade/Dif.h.decade]
HLI_Decomp.decade[,C.I.decade := Delta.I.decade/Dif.h.decade]
HLI_Decomp.decade[,check1 := C.mu.decade + C.I.decade]
HLI_Decomp.decade[,Delta.relative.mu.decade := Delta.mu.decade/(abs(Delta.mu.decade)+abs(Delta.I.decade))]
HLI_Decomp.decade[,Delta.relative.I.decade := Delta.I.decade/(abs(Delta.mu.decade)+abs(Delta.I.decade))]
Fig1 <- ggplot(data = HLI_Data[epsilon != 0], aes(x = efficiency, y = inequality,color=Year)) +
geom_point(alpha=I(1/2),shape=19,show.legend = T)+
#facet_wrap(~epsilon,scales = 'free')+
facet_wrap(~epsilon, labeller = labeller(epsilon = c('1','2','3')))+
#geom_smooth(data=Results,aes(x = eo, y = h), method = "lm", se=FALSE,col="black",size=1,lty=2,na.rm = T) + # if I want a linear one
scale_x_continuous(expression(e[0]))+
scale_color_viridis(discrete=F,option = 'C',direction = 1) +
scale_y_continuous(expression(I[epsilon]))+
theme(legend.key.height=unit(2,"line"))+
#theme(legend.position = c(0.15, 0.85))+
#ggtitle(expression(paste("Efficiency (", e[0],") vs Inequality (",I[epsilon],'), by level of ', epsilon)))+
theme(text = element_text(size = 15))+
#eliminates background, gridlines, and chart border
theme(plot.background = element_blank()
,legend.key = element_blank())
previous_theme <- theme_set(theme_bw())
png(filename = 'Figures/Fig1EPC.png', width = 800, height = 400, units = "px", pointsize = 12)
Fig1
dev.off()
unique(HLI_Data$epsilon)
names(epsilon) <- as.character(unique(HLI_Data$epsilon))
epsilon <- c("D0.5", "D1", "D2")
names(epsilon) <- as.character(unique(HLI_Data$epsilon))
Fig1 <- ggplot(data = HLI_Data[epsilon != 0], aes(x = efficiency, y = inequality,color=Year)) +
geom_point(alpha=I(1/2),shape=19,show.legend = T)+
#facet_wrap(~epsilon,scales = 'free')+
facet_wrap(~epsilon, labeller = labeller(epsilon = c('1','2','3')))+
#geom_smooth(data=Results,aes(x = eo, y = h), method = "lm", se=FALSE,col="black",size=1,lty=2,na.rm = T) + # if I want a linear one
scale_x_continuous(expression(e[0]))+
scale_color_viridis(discrete=F,option = 'C',direction = 1) +
scale_y_continuous(expression(I[epsilon]))+
theme(legend.key.height=unit(2,"line"))+
#theme(legend.position = c(0.15, 0.85))+
#ggtitle(expression(paste("Efficiency (", e[0],") vs Inequality (",I[epsilon],'), by level of ', epsilon)))+
theme(text = element_text(size = 15))+
#eliminates background, gridlines, and chart border
theme(plot.background = element_blank()
,legend.key = element_blank())
previous_theme <- theme_set(theme_bw())
#Fig1
png(filename = 'Figures/Fig1EPC.png', width = 800, height = 400, units = "px", pointsize = 12)
Fig1
dev.off()
epsilon.LAB <- c("D0.5", "D1", "D2")
names(epsilon.LAB) <- as.character(unique(HLI_Data$epsilon))
# first plot of efficiency vs inequality for different values of epsilon
Fig1 <- ggplot(data = HLI_Data[epsilon != 0], aes(x = efficiency, y = inequality,color=Year)) +
geom_point(alpha=I(1/2),shape=19,show.legend = T)+
#facet_wrap(~epsilon,scales = 'free')+
facet_wrap(~epsilon, labeller = labeller(epsilon = epsilon.LAB))+
#geom_smooth(data=Results,aes(x = eo, y = h), method = "lm", se=FALSE,col="black",size=1,lty=2,na.rm = T) + # if I want a linear one
scale_x_continuous(expression(e[0]))+
scale_color_viridis(discrete=F,option = 'C',direction = 1) +
scale_y_continuous(expression(I[epsilon]))+
theme(legend.key.height=unit(2,"line"))+
#theme(legend.position = c(0.15, 0.85))+
#ggtitle(expression(paste("Efficiency (", e[0],") vs Inequality (",I[epsilon],'), by level of ', epsilon)))+
theme(text = element_text(size = 15))+
#eliminates background, gridlines, and chart border
theme(plot.background = element_blank()
,legend.key = element_blank())
previous_theme <- theme_set(theme_bw())
#Fig1
png(filename = 'Figures/Fig1EPC.png', width = 800, height = 400, units = "px", pointsize = 12)
Fig1
dev.off()
epsilon.LAB <- c(expression(epsilon=0.5), expression(epsilon=1), expression(epsilon=2))
names(epsilon.LAB) <- as.character(unique(HLI_Data$epsilon))
# first plot of efficiency vs inequality for different values of epsilon
Fig1 <- ggplot(data = HLI_Data[epsilon != 0], aes(x = efficiency, y = inequality,color=Year)) +
geom_point(alpha=I(1/2),shape=19,show.legend = T)+
#facet_wrap(~epsilon,scales = 'free')+
facet_wrap(~epsilon, labeller = labeller(epsilon = epsilon.LAB))+
#geom_smooth(data=Results,aes(x = eo, y = h), method = "lm", se=FALSE,col="black",size=1,lty=2,na.rm = T) + # if I want a linear one
scale_x_continuous(expression(e[0]))+
scale_color_viridis(discrete=F,option = 'C',direction = 1) +
scale_y_continuous(expression(I[epsilon]))+
theme(legend.key.height=unit(2,"line"))+
#theme(legend.position = c(0.15, 0.85))+
#ggtitle(expression(paste("Efficiency (", e[0],") vs Inequality (",I[epsilon],'), by level of ', epsilon)))+
theme(text = element_text(size = 15))+
#eliminates background, gridlines, and chart border
theme(plot.background = element_blank()
,legend.key = element_blank())
previous_theme <- theme_set(theme_bw())
#Fig1
png(filename = 'Figures/Fig1EPC.png', width = 800, height = 400, units = "px", pointsize = 12)
Fig1
dev.off()
epsilon.LAB <- c(expression(paste(epsilon, "= 0.5")),
expression(paste(epsilon, "= 1")),
expression(paste(epsilon, "= 2")))
epsilon.LAB
names(epsilon.LAB) <- as.character(unique(HLI_Data$epsilon))
Fig1 <- ggplot(data = HLI_Data[epsilon != 0], aes(x = efficiency, y = inequality,color=Year)) +
geom_point(alpha=I(1/2),shape=19,show.legend = T)+
#facet_wrap(~epsilon,scales = 'free')+
facet_wrap(~epsilon, labeller = labeller(epsilon = epsilon.LAB))+
#geom_smooth(data=Results,aes(x = eo, y = h), method = "lm", se=FALSE,col="black",size=1,lty=2,na.rm = T) + # if I want a linear one
scale_x_continuous(expression(e[0]))+
scale_color_viridis(discrete=F,option = 'C',direction = 1) +
scale_y_continuous(expression(I[epsilon]))+
theme(legend.key.height=unit(2,"line"))+
#theme(legend.position = c(0.15, 0.85))+
#ggtitle(expression(paste("Efficiency (", e[0],") vs Inequality (",I[epsilon],'), by level of ', epsilon)))+
theme(text = element_text(size = 15))+
#eliminates background, gridlines, and chart border
theme(plot.background = element_blank()
,legend.key = element_blank())
previous_theme <- theme_set(theme_bw())
#Fig1
png(filename = 'Figures/Fig1EPC.png', width = 800, height = 400, units = "px", pointsize = 12)
Fig1
dev.off()
epsilon.LAB <- c(as.charcater(expression(paste(epsilon, " = 0.5"))),
as.charcater(expression(paste(epsilon, " = 1"))),
as.charcater(expression(paste(epsilon, " = 2"))))
epsilon.LAB <- c(as.character(expression(paste(epsilon, " = 0.5"))),
as.character(expression(paste(epsilon, " = 1"))),
as.character(expression(paste(epsilon, " = 2"))))
names(epsilon.LAB) <- as.character(unique(HLI_Data$epsilon))
# first plot of efficiency vs inequality for different values of epsilon
Fig1 <- ggplot(data = HLI_Data[epsilon != 0], aes(x = efficiency, y = inequality,color=Year)) +
geom_point(alpha=I(1/2),shape=19,show.legend = T)+
#facet_wrap(~epsilon,scales = 'free')+
facet_wrap(~epsilon, labeller = labeller(epsilon = epsilon.LAB))+
#geom_smooth(data=Results,aes(x = eo, y = h), method = "lm", se=FALSE,col="black",size=1,lty=2,na.rm = T) + # if I want a linear one
scale_x_continuous(expression(e[0]))+
scale_color_viridis(discrete=F,option = 'C',direction = 1) +
scale_y_continuous(expression(I[epsilon]))+
theme(legend.key.height=unit(2,"line"))+
#theme(legend.position = c(0.15, 0.85))+
#ggtitle(expression(paste("Efficiency (", e[0],") vs Inequality (",I[epsilon],'), by level of ', epsilon)))+
theme(text = element_text(size = 15))+
#eliminates background, gridlines, and chart border
theme(plot.background = element_blank()
,legend.key = element_blank())
previous_theme <- theme_set(theme_bw())
#Fig1
png(filename = 'Figures/Fig1EPC.png', width = 800, height = 400, units = "px", pointsize = 12)
Fig1
dev.off()
HLI_Data$epsilon <- factor(HLI_Data$epsilon,
levels=c(.5,1,2),
labels=c(as.character(expression(paste(epsilon, " = 0.5"))),
as.character(expression(paste(epsilon, " = 1"))),
as.character(expression(paste(epsilon, " = 2")))))
HLI_Data
HLI_Data$epsilon <- factor(HLI_Data$epsilon,
levels=c(.5,1,2),
labels=c((expression(paste(epsilon, " = 0.5"))),
(expression(paste(epsilon, " = 1"))),
(expression(paste(epsilon, " = 2")))))
HLI_Data
############# Written by JMA for figures for EPC
############# 23/10/2019
rm(list=ls(all=TRUE))
library(data.table)
library(ggplot2)
library(viridis)
library(reshape2)
# set your working directory
setwd("C:/Users/jmaburto.SAM/Documents/GitHub/HLI-Permanyer-Kashnitsky/")
#source("1_GetHMDData.R") # Just in case you want updatedM HD Data
# Loading results
#source('R/2_HLI.R')
load('Data/Results_HLI.RData')
HLI_Decomp[,Dif.H := H2-H1]
HLI_Decomp[,Year := year.1]
HLI_Decomp[,Decade := cut(year.1,breaks = c(seq(1750,2010,10),Inf),
#labels = c("1900-1921","1921-1959","1960 onwards"),
include.lowest = T)]
HLI_Decomp.decade <- HLI_Decomp[,list(Delta.mu.decade = sum(Delta.mu),
Delta.I.decade = sum(Delta.I),
Dif.h.decade = sum(Dif.H),
H.bar = mean(H1),
Inequality.bar = mean(I1),
Mu.bar = mean(mu1),
year.1 =  min(year.1)
), by = list(PopName,Sex,Decade,epsilon)]
HLI_Decomp.decade[,C.mu.decade := Delta.mu.decade/Dif.h.decade]
HLI_Decomp.decade[,C.I.decade := Delta.I.decade/Dif.h.decade]
HLI_Decomp.decade[,check1 := C.mu.decade + C.I.decade]
HLI_Decomp.decade[,Delta.relative.mu.decade := Delta.mu.decade/(abs(Delta.mu.decade)+abs(Delta.I.decade))]
HLI_Decomp.decade[,Delta.relative.I.decade := Delta.I.decade/(abs(Delta.mu.decade)+abs(Delta.I.decade))]
HLI_Data$epsilon <- factor(HLI_Data$epsilon,
levels=c(.5,1,2),
labels=c((expression(paste(epsilon, " = 0.5"))),
(expression(paste(epsilon, " = 1"))),
(expression(paste(epsilon, " = 2")))))
HLI_Data
Fig1 <- ggplot(data = HLI_Data[epsilon != 0], aes(x = efficiency, y = inequality,color=Year)) +
geom_point(alpha=I(1/2),shape=19,show.legend = T)+
#facet_wrap(~epsilon,scales = 'free')+
facet_wrap(~epsilon, labeller = labeller(epsilon = label_parsed))+
#geom_smooth(data=Results,aes(x = eo, y = h), method = "lm", se=FALSE,col="black",size=1,lty=2,na.rm = T) + # if I want a linear one
scale_x_continuous(expression(e[0]))+
scale_color_viridis(discrete=F,option = 'C',direction = 1) +
scale_y_continuous(expression(I[epsilon]))+
theme(legend.key.height=unit(2,"line"))+
#theme(legend.position = c(0.15, 0.85))+
#ggtitle(expression(paste("Efficiency (", e[0],") vs Inequality (",I[epsilon],'), by level of ', epsilon)))+
theme(text = element_text(size = 15))+
#eliminates background, gridlines, and chart border
theme(plot.background = element_blank()
,legend.key = element_blank())
previous_theme <- theme_set(theme_bw())
png(filename = 'Figures/Fig1EPC.png', width = 800, height = 400, units = "px", pointsize = 12)
Fig1
dev.off()
Fig2A <- ggplot(data = HLI_Decomp.decade, aes(x = Delta.mu.decade, y = Delta.I.decade, color=year.1 )) +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+geom_abline()+
geom_point(alpha=I(1/2),shape=19,show.legend = T)+
facet_wrap(~epsilon, labeller = labeller(epsilon = label_parsed))+
scale_x_continuous(expression(Delta[e[0]]),limits = c(-6,15))+
scale_color_viridis(discrete=F,option = 'C',direction = 1, name = 'Decade') +
scale_y_continuous(expression(Delta[I]), limits = c(-6,20))+
theme(legend.key.height=unit(2,"line"))+
#ggtitle(expression(paste('A) Absolute contribution of efficiency (', e[0],") by contribution of inequality (",Delta[I],'), by level of ', epsilon)))+
theme(text = element_text(size = 15))+
theme(plot.background = element_blank()
,legend.key = element_blank())
previous_theme <- theme_set(theme_bw())
Fig2A
png(filename = 'Figures/Fig2EPC.png', width = 800, height = 400, units = "px", pointsize = 12)
Fig2A
dev.off()
HLI_Decomp.decade$epsilon <- factor(HLI_Decomp.decade$epsilon,
levels=c(.5,1,2),
labels=c((expression(paste(epsilon, " = 0.5"))),
(expression(paste(epsilon, " = 1"))),
(expression(paste(epsilon, " = 2")))))
Fig2A <- ggplot(data = HLI_Decomp.decade, aes(x = Delta.mu.decade, y = Delta.I.decade, color=year.1 )) +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+geom_abline()+
geom_point(alpha=I(1/2),shape=19,show.legend = T)+
facet_wrap(~epsilon, labeller = labeller(epsilon = label_parsed))+
scale_x_continuous(expression(Delta[e[0]]),limits = c(-6,15))+
scale_color_viridis(discrete=F,option = 'C',direction = 1, name = 'Decade') +
scale_y_continuous(expression(Delta[I]), limits = c(-6,20))+
theme(legend.key.height=unit(2,"line"))+
#ggtitle(expression(paste('A) Absolute contribution of efficiency (', e[0],") by contribution of inequality (",Delta[I],'), by level of ', epsilon)))+
theme(text = element_text(size = 15))+
theme(plot.background = element_blank()
,legend.key = element_blank())
previous_theme <- theme_set(theme_bw())
Fig2A
png(filename = 'Figures/Fig2EPC.png', width = 800, height = 400, units = "px", pointsize = 12)
Fig2A
dev.off()
